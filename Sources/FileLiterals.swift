struct FileLiterals {
    static let CloudFormation = [
        "{",
        "  \"AWSTemplateFormatVersion\": \"2010-09-09\",",
        "  \"Metadata\": {},",
        "  \"Parameters\": {",
        "    \"S3Bucket\": {",
        "      \"Type\": \"String\"",
        "    },",
        "    \"S3Key\": {",
        "      \"Type\": \"String\"",
        "    },",
        "    \"S3ObjectVersion\": {",
        "      \"Type\": \"String\"",
        "    },",
        "    \"Role\": {",
        "      \"Type\": \"String\"",
        "    }",
        "  },",
        "  \"Resources\": {",
        "    \"MyFunction\": {",
        "      \"Type\": \"AWS::Lambda::Function\",",
        "      \"Properties\": {",
        "        \"Handler\": \"index.handler\",",
        "        \"Role\": {\"Ref\": \"Role\"},",
        "        \"Runtime\": \"nodejs4.3\",",
        "        \"Code\": {",
        "          \"S3Bucket\": {\"Ref\": \"S3Bucket\"},",
        "          \"S3Key\": {\"Ref\": \"S3Key\"},",
        "          \"S3ObjectVersion\": {\"Ref\": \"S3ObjectVersion\"}",
        "        },",
        "        \"MemorySize\": 128,",
        "        \"Timeout\": 30,",
        "        \"Environment\": {",
        "          \"Variables\": {",
        "            \"SOME_VAR\": \"itsvalue\"",
        "          }",
        "        }",
        "      }",
        "    }",
        "  },",
        "  \"Outputs\": {",
        "    \"FunctionName\": {",
        "      \"Value\": {\"Ref\": \"MyFunction\"}",
        "    },",
        "    \"FunctionArn\": {",
        "      \"Value\": {\"Fn::GetAtt\": [\"MyFunction\", \"Arn\"]}",
        "    }",
        "  }",
        "}",
    ].joined(separator: "\n")

    static let CloudFormation2 = [
        "---",
        "AWSTemplateFormatVersion: '2010-09-09'",
        "",
        "Metadata: {}",
        "",
        "Parameters:",
        "  S3Bucket:",
        "    Type: String",
        "  S3Key:",
        "    Type: String",
        "  S3ObjectVersion:",
        "    Type: String",
        "  Role:",
        "    Type: String",
        "",
        "Resources:",
        "  MyFunction:",
        "    Type: AWS::Lambda::Function",
        "    Properties:",
        "      Handler: index.handler",
        "      Role: !Ref Role",
        "      Runtime: nodejs4.3",
        "      Code:",
        "        S3Bucket: !Ref S3Bucket",
        "        S3Key: !Ref S3Key",
        "        S3ObjectVersion: !Ref S3ObjectVersion",
        "      MemorySize: 128",
        "      Timeout: 30",
        "      Environment:",
        "        Variables:",
        "          SOME_VAR: itsvalue",
        "",
        "Outputs:",
        "  FunctionName:",
        "    Value: !Ref MyFunction",
        "  FunctionArn:",
        "    Value: !GetAtt MyFunction.Arn",
    ].joined(separator: "\n")

    static let index = [
        "\"use strict\";",
        "var childProcess = require('child_process');",
        "",
        "exports.handler = function(event, context, callback) {",
        "    process.env['PATH'] += ':' + process.env['LAMBDA_TASK_ROOT'];",
        "    process.env['LD_LIBRARY_PATH'] = process.env['LAMBDA_TASK_ROOT'];",
        "",
        "    let input = { event: event, context: context };",
        "    let child = childProcess.spawnSync('./swiftdaEntrypoint', [], {",
        "        input: JSON.stringify(input)",
        "    });",
        "",
        "    let output = JSON.parse(child.stdout);",
        "    console.log(output);",
        "    callback(null, output);",
        "};",
    ].joined(separator: "\n")

    static let InitialSetup = [
        "---",
        "AWSTemplateFormatVersion: '2010-09-09'",
        "",
        "Resources:",
        "  CodeStorageBucket:",
        "    Type: AWS::S3::Bucket",
        "    Properties:",
        "      VersioningConfiguration: ",
        "        Status: Enabled",
        "  ExecutionRole:",
        "    Type: AWS::IAM::Role",
        "    Properties:",
        "      AssumeRolePolicyDocument:",
        "        Version: '2012-10-17'",
        "        Statement:",
        "          - Effect: Allow",
        "            Action: sts:AssumeRole",
        "            Principal:",
        "              Service: lambda.amazonaws.com",
        "      ManagedPolicyArns:",
        "        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
        "      Path: /",
        "",
        "Outputs:",
        "  CodeStorageBucket:",
        "    Description: Default bucket for Swiftda-managed functions",
        "    Value: !Ref CodeStorageBucket",
        "    Export:",
        "      Name: SwiftdaCodeStorageBucket",
        "  ExecutionRoleArn:",
        "    Description: ARN of default Lambda execution role for Swiftda-managed functions",
        "    Value: !GetAtt ExecutionRole.Arn",
        "    Export:",
        "      Name: SwiftdaExecutionRoleArn",
    ].joined(separator: "\n")

}
